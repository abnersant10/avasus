# Generated by Django 4.1.4 on 2022-12-31 13:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import forum.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("nome_completo", models.CharField(default=" ", max_length=60)),
                ("nome_social", models.CharField(default=" ", max_length=50)),
                (
                    "cpf",
                    models.CharField(max_length=11, primary_key=True, serialize=False),
                ),
                ("nasc", models.DateField(default=django.utils.timezone.now)),
                ("estado", models.CharField(default=" ", max_length=2)),
                ("cidade", models.CharField(default=" ", max_length=50)),
                (
                    "perfil",
                    models.CharField(
                        choices=[("PROF", "Professor"), ("ALU", "Aluno")],
                        default="ALU",
                        max_length=4,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[("objects", forum.manager.UserManager()),],
        ),
        migrations.CreateModel(
            name="AlunosVinculados",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Categoria",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("nome", models.CharField(default=" ", max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name="Subforum",
            fields=[
                ("cod_subforum", models.AutoField(primary_key=True, serialize=False)),
                ("titulo", models.CharField(default=" ", max_length=120)),
                ("descricao", models.CharField(default=" ", max_length=512)),
                (
                    "data_criacao",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[("ATV", "Ativado"), ("TRC", "Trancado")],
                        default="ATV",
                        max_length=4,
                    ),
                ),
                (
                    "autor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "cat_subforum",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="forum.categoria",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Topico",
            fields=[
                ("cod_topico", models.AutoField(primary_key=True, serialize=False)),
                ("titulo", models.CharField(default=" ", max_length=120)),
                ("descricao", models.CharField(default=" ", max_length=512)),
                (
                    "data_criacao",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "autor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "cod_subforum",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="forum.subforum"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Resposta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("texto", models.CharField(default=" ", max_length=512)),
                (
                    "data_criacao",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "autor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "cod_topico",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="forum.topico"
                    ),
                ),
            ],
        ),
    ]
